apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "xray-analysis.fullname" . }}
  labels:
    app: {{ template "xray-analysis.name" . }}
    chart: {{ template "xray.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    component: {{ .Values.analysis.name }}
spec:
  serviceName: {{ template "xray-analysis.name" . }}
  replicas: {{ .Values.common.replicaCount }}
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "xray.name" . }}
      release: {{ .Release.Name }}
      role: {{ template "xray-analysis.name" . }}
      component: {{ .Values.analysis.name }}
  template:
    metadata:
      labels:
        app: {{ template "xray.name" . }}
        release: {{ .Release.Name }}
        role: {{ template "xray-analysis.name" . }}
        component: {{ .Values.analysis.name }}
    spec:
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      serviceAccountName: {{ template "xray.serviceAccountName" . }}
      securityContext:
        runAsUser: {{ .Values.common.xrayUserId }}
        fsGroup: {{ .Values.common.xrayGroupId }}
      initContainers:
      - name: init-wait
        image: {{ .Values.initContainerImage | quote }}
        env:
        {{- if .Values.mongodb.enabled }}
        - name: MONGODB_USER
          value: {{ .Values.mongodb.mongodbUsername }}
        - name: MONGODB_DATABASE
          value: {{ .Values.mongodb.mongodbDatabase }}
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mongodb
              key: mongodb-password
        {{- else }}
        - name: MONGODB_URL
          value: {{ .Values.global.mongoUrl }}
        {{- end }}
        {{- if .Values.postgresql.enabled }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.postgresUser }}
        - name: POSTGRESS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgresql
              key: postgres-password
        - name: POSTGRESS_DB
          value: {{ .Values.postgresql.postgresDatabase }}
        {{- else }}
        - name: POSTGRESS_URL
          value: {{ .Values.global.postgresqlUrl }}
        {{- end }}
        - name: RABBITMQ_USER
          value: {{ index .Values "rabbitmq-ha" "rabbitmqUsername" }}
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq-ha
              key: rabbitmq-erlang-cookie
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-rabbitmq-ha
              key: rabbitmq-password
        command:
        - '/bin/sh'
        - '-c'
        - >
          cp -fv /scripts/setup.sh {{ .Values.common.xrayConfigPath }};
          chmod +x {{ .Values.common.xrayConfigPath }}/setup.sh;
          {{ .Values.common.xrayConfigPath }}/setup.sh;
        volumeMounts:
        - name: analysis-volume
          mountPath: "{{ .Values.common.xrayConfigPath }}"
        - name: setup
          mountPath: "/scripts"
      containers:
      - name: {{ .Values.analysis.name }}
        image: {{ .Values.analysis.image }}:{{ default .Chart.AppVersion .Values.common.xrayVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: XRAYCONFIGPATH
          value: "{{ .Values.common.xrayConfigPath }}"
        - name: XRAY_MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "xray.fullname" . }}-master-key
              key: master-key
        - name: XRAY_HA_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        ports:
        - containerPort: {{ .Values.analysis.internalPort }}
        volumeMounts:
        - name: analysis-volume
          mountPath: "{{ .Values.common.xrayConfigPath }}"
        securityContext:
          allowPrivilegeEscalation: false
        resources:
{{ toYaml .Values.analysis.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /debug/pprof/
            port: {{ .Values.analysis.internalPort }}
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /debug/pprof/
            port: {{ .Values.analysis.internalPort }}
          initialDelaySeconds: 90
          periodSeconds: 10
      volumes:
      - name: setup
        configMap:
          name: {{ template "xray.fullname" . }}-setup
      {{- if .Values.analysis.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: analysis-volume
    spec:
    {{- if .Values.analysis.persistence.existingClaim }}
      selector:
        matchLabels:
          app: {{ template "xray-analysis.name" . }}
    {{- else }}
      {{- if .Values.analysis.persistence.storageClass }}
      {{- if (eq "-" .Values.analysis.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.analysis.persistence.storageClass }}"
      {{- end }}
      {{- end }}
      accessModes: [ "{{ .Values.analysis.persistence.accessMode }}" ]
      resources:
        requests:
          storage: {{ .Values.analysis.persistence.size }}
    {{- end }}
      {{- else }}
      - name: analysis-volume
        emptyDir:
          sizeLimit: {{ .Values.analysis.persistence.size }}
      {{- end }}